stages:
  - build
  - deploy
  - down

variables:
  DEPLOY_PATH_PROD: "/home/marco/gitlab-ws/calendar-autodeploy/prod/frontend"
  DEPLOY_PATH_DEV: "/home/marco/gitlab-ws/calendar-autodeploy/dev/frontend"
  
before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -p $PORT $HOST_NAME >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

# PRODUCTION
build-prod:
  stage: build
  image: node:10
  before_script:
    - ''
  script:
    - npm install --quiet
  artifacts:
    paths:
      - .
  only:
    - master

deploy-prod:
  stage: deploy
  dependencies:
    - build-prod
  script:
    - ssh $USER_NAME@$HOST_NAME -p $PORT "mkdir -p $DEPLOY_PATH_PROD"
    - scp -P $PORT -rp ./* $USER_NAME@$HOST_NAME:$DEPLOY_PATH_PROD
    - scp -P $PORT docker-compose.yml $USER_NAME@$HOST_NAME:$DEPLOY_PATH_PROD
    - | 
      ssh $USER_NAME@$HOST_NAME -p $PORT "cd $DEPLOY_PATH_PROD &&
        docker-compose -f docker-compose.yml up --build --force-recreate -d"
  environment:
    name: production
    url: https://calendar.marcostevanon.ovh
  only:
    - master

# DEVELOPMENT
build-dev:
  stage: build
  image: node:10
  before_script:
    - ''
  script:
    - npm install --quiet
  artifacts:
    paths:
      - .
  only:
    - dev

deploy-dev:
  stage: deploy
  dependencies:
    - build-dev
  script:
    - ssh $USER_NAME@$HOST_NAME -p $PORT "mkdir -p $DEPLOY_PATH_DEV"
    - scp -P $PORT -rp ./* $USER_NAME@$HOST_NAME:$DEPLOY_PATH_DEV
    - scp -P $PORT docker-compose-dev.yml $USER_NAME@$HOST_NAME:$DEPLOY_PATH_DEV
    - | 
      ssh $USER_NAME@$HOST_NAME -p $PORT "cd $DEPLOY_PATH_DEV &&
        docker-compose -f docker-compose-dev.yml up --build --force-recreate -d"
  environment:
    name: development
    url: https://dev.calendar.marcostevanon.ovh
  only:
    - dev

down-dev:
  stage: down
  script:
   - |
      ssh $USER_NAME@$HOST_NAME -p $PORT "cd $DEPLOY_PATH_DEV &&
        docker-compose -f docker-compose-dev.yml down"
  environment:
    name: development
    action: stop
  when: manual
  only:
   - dev